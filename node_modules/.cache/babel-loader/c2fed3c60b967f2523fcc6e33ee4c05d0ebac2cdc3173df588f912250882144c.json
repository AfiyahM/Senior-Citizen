{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\React\\\\new\\\\src\\\\pages\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Function to handle GET request\n  const handleFetchLoginDetails = async () => {\n    setError('');\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login-details', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setEmail(data.email || '');\n        setPassword(data.password || '');\n      } else {\n        const result = await response.json();\n        setError(result.message || 'Unable to fetch login details');\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n      setError('An error occurred while fetching login details.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.token && data.userId) {\n          localStorage.setItem('token', data.token);\n          localStorage.setItem('userId', data.userId);\n          onLoginSuccess(data.userId, data.token);\n        } else {\n          setError('Invalid response from server');\n        }\n      } else {\n        const result = await response.json();\n        setError(result.message || 'Invalid login credentials');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setError('An error occurred. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchLoginDetails,\n      disabled: loading,\n      children: loading ? 'Fetching details...' : 'Get Login Details'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"G/T6+fVRpp/0AVvTYcd6/2PGde0=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginForm","onLoginSuccess","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","handleFetchLoginDetails","response","fetch","method","headers","ok","data","json","result","message","console","handleLogin","e","preventDefault","body","JSON","stringify","token","userId","localStorage","setItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onSubmit","type","value","onChange","target","placeholder","required","style","color","_c","$RefreshReg$"],"sources":["C:/REACT/React/new/src/pages/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst LoginForm = ({ onLoginSuccess }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Function to handle GET request\r\n  const handleFetchLoginDetails = async () => {\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/login-details', {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setEmail(data.email || '');\r\n        setPassword(data.password || '');\r\n      } else {\r\n        const result = await response.json();\r\n        setError(result.message || 'Unable to fetch login details');\r\n      }\r\n    } catch (error) {\r\n      console.error('Fetch error:', error);\r\n      setError('An error occurred while fetching login details.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.token && data.userId) {\r\n          localStorage.setItem('token', data.token);\r\n          localStorage.setItem('userId', data.userId);\r\n          onLoginSuccess(data.userId, data.token);\r\n        } else {\r\n          setError('Invalid response from server');\r\n        }\r\n      } else {\r\n        const result = await response.json();\r\n        setError(result.message || 'Invalid login credentials');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      setError('An error occurred. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <button onClick={handleFetchLoginDetails} disabled={loading}>\r\n        {loading ? 'Fetching details...' : 'Get Login Details'}\r\n      </button>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Logging in...' : 'Login'}\r\n        </button>\r\n      </form>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}