{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\React\\\\new\\\\src\\\\components\\\\VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [feedback, setFeedback] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n\n  // Fetch a single video from the backend\n  useEffect(() => {\n    fetch('http://localhost:5000/api/videos').then(response => response.json()).then(data => {\n      if (data.length > 0) {\n        setSelectedVideo(data[0]); // Automatically select the first video\n      }\n    }).catch(error => console.error('Error fetching video:', error));\n  }, []);\n  const handleFeedbackSubmit = e => {\n    e.preventDefault();\n    if (selectedVideo) {\n      setSubmitted(true);\n      fetch('http://localhost:5000/api/feedback', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          videoId: selectedVideo._id,\n          feedback\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Feedback submitted:', data);\n        setFeedback('');\n      }).catch(error => console.error('Error submitting feedback:', error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.heading,\n      children: \"Video Tutorial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.videoSection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.videoWrapper,\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"100%\",\n          height: \"400\",\n          src: `https://www.youtube.com/embed/${selectedVideo.videoId}`,\n          title: \"YouTube video player\",\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          style: styles.videoPlayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.videoDetails,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.videoTitle,\n          children: selectedVideo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.videoDescription,\n          children: selectedVideo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.feedbackSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.subHeading,\n        children: \"Feedback Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), submitted ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.thankYouMessage,\n        children: \"Thank you for your feedback!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFeedbackSubmit,\n        style: styles.feedbackForm,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter your feedback here...\",\n          value: feedback,\n          onChange: e => setFeedback(e.target.value),\n          style: styles.textArea,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: styles.submitButton,\n          children: \"Submit Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"1ZTYrJ/Bqpo3tpdkaecuYwxA7UY=\");\n_c = VideoPlayer;\nconst styles = {\n  container: {\n    padding: '20px',\n    maxWidth: '800px',\n    margin: '0 auto',\n    fontFamily: 'Arial, sans-serif'\n  },\n  heading: {\n    fontSize: '24px',\n    fontWeight: 'bold',\n    marginBottom: '20px',\n    textAlign: 'center',\n    color: '#333'\n  },\n  videoSection: {\n    marginBottom: '30px'\n  },\n  videoWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  videoPlayer: {\n    borderRadius: '8px'\n  },\n  videoDetails: {\n    padding: '10px',\n    backgroundColor: '#f9f9f9',\n    borderRadius: '8px',\n    border: '1px solid #ddd',\n    marginTop: '20px'\n  },\n  videoTitle: {\n    fontSize: '18px',\n    fontWeight: 'bold',\n    color: '#555',\n    marginBottom: '10px'\n  },\n  videoDescription: {\n    fontSize: '14px',\n    color: '#777'\n  },\n  feedbackSection: {\n    marginTop: '20px'\n  },\n  thankYouMessage: {\n    color: '#28a745',\n    fontSize: '16px'\n  },\n  feedbackForm: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '10px'\n  },\n  textArea: {\n    width: '100%',\n    height: '100px',\n    padding: '10px',\n    borderRadius: '8px',\n    border: '1px solid #ddd',\n    fontSize: '14px',\n    fontFamily: 'Arial, sans-serif'\n  },\n  submitButton: {\n    padding: '10px 20px',\n    fontSize: '16px',\n    fontWeight: 'bold',\n    color: '#fff',\n    backgroundColor: '#007bff',\n    border: 'none',\n    borderRadius: '8px',\n    cursor: 'pointer'\n  }\n};\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","VideoPlayer","_s","selectedVideo","setSelectedVideo","feedback","setFeedback","submitted","setSubmitted","fetch","then","response","json","data","length","catch","error","console","handleFeedbackSubmit","e","preventDefault","method","headers","body","JSON","stringify","videoId","_id","log","style","styles","container","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","videoSection","videoWrapper","width","height","src","title","frameBorder","allow","allowFullScreen","videoPlayer","videoDetails","videoTitle","videoDescription","description","feedbackSection","subHeading","thankYouMessage","onSubmit","feedbackForm","placeholder","value","onChange","target","textArea","required","type","submitButton","_c","padding","maxWidth","margin","fontFamily","fontSize","fontWeight","marginBottom","textAlign","color","display","justifyContent","alignItems","borderRadius","backgroundColor","border","marginTop","flexDirection","gap","cursor","$RefreshReg$"],"sources":["C:/REACT/React/new/src/components/VideoPlayer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst VideoPlayer = () => {\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  const [feedback, setFeedback] = useState('');\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  // Fetch a single video from the backend\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/videos')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.length > 0) {\r\n          setSelectedVideo(data[0]); // Automatically select the first video\r\n        }\r\n      })\r\n      .catch((error) => console.error('Error fetching video:', error));\r\n  }, []);\r\n\r\n  const handleFeedbackSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (selectedVideo) {\r\n      setSubmitted(true);\r\n      fetch('http://localhost:5000/api/feedback', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          videoId: selectedVideo._id,\r\n          feedback,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log('Feedback submitted:', data);\r\n          setFeedback('');\r\n        })\r\n        .catch((error) => console.error('Error submitting feedback:', error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.heading}>Video Tutorial</h2>\r\n\r\n      {selectedVideo && (\r\n        <div style={styles.videoSection}>\r\n          <div style={styles.videoWrapper}>\r\n            <iframe\r\n              width=\"100%\"\r\n              height=\"400\"\r\n              src={`https://www.youtube.com/embed/${selectedVideo.videoId}`}\r\n              title=\"YouTube video player\"\r\n              frameBorder=\"0\"\r\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n              allowFullScreen\r\n              style={styles.videoPlayer}\r\n            ></iframe>\r\n          </div>\r\n          <div style={styles.videoDetails}>\r\n            <h3 style={styles.videoTitle}>{selectedVideo.title}</h3>\r\n            <p style={styles.videoDescription}>{selectedVideo.description}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {selectedVideo && (\r\n        <div style={styles.feedbackSection}>\r\n          <h3 style={styles.subHeading}>Feedback Form</h3>\r\n          {submitted ? (\r\n            <p style={styles.thankYouMessage}>Thank you for your feedback!</p>\r\n          ) : (\r\n            <form onSubmit={handleFeedbackSubmit} style={styles.feedbackForm}>\r\n              <textarea\r\n                placeholder=\"Enter your feedback here...\"\r\n                value={feedback}\r\n                onChange={(e) => setFeedback(e.target.value)}\r\n                style={styles.textArea}\r\n                required\r\n              />\r\n              <button type=\"submit\" style={styles.submitButton}>\r\n                Submit Feedback\r\n              </button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    padding: '20px',\r\n    maxWidth: '800px',\r\n    margin: '0 auto',\r\n    fontFamily: 'Arial, sans-serif',\r\n  },\r\n  heading: {\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n    marginBottom: '20px',\r\n    textAlign: 'center',\r\n    color: '#333',\r\n  },\r\n  videoSection: {\r\n    marginBottom: '30px',\r\n  },\r\n  videoWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  videoPlayer: {\r\n    borderRadius: '8px',\r\n  },\r\n  videoDetails: {\r\n    padding: '10px',\r\n    backgroundColor: '#f9f9f9',\r\n    borderRadius: '8px',\r\n    border: '1px solid #ddd',\r\n    marginTop: '20px',\r\n  },\r\n  videoTitle: {\r\n    fontSize: '18px',\r\n    fontWeight: 'bold',\r\n    color: '#555',\r\n    marginBottom: '10px',\r\n  },\r\n  videoDescription: {\r\n    fontSize: '14px',\r\n    color: '#777',\r\n  },\r\n  feedbackSection: {\r\n    marginTop: '20px',\r\n  },\r\n  thankYouMessage: {\r\n    color: '#28a745',\r\n    fontSize: '16px',\r\n  },\r\n  feedbackForm: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '10px',\r\n  },\r\n  textArea: {\r\n    width: '100%',\r\n    height: '100px',\r\n    padding: '10px',\r\n    borderRadius: '8px',\r\n    border: '1px solid #ddd',\r\n    fontSize: '14px',\r\n    fontFamily: 'Arial, sans-serif',\r\n  },\r\n  submitButton: {\r\n    padding: '10px 20px',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    backgroundColor: '#007bff',\r\n    border: 'none',\r\n    borderRadius: '8px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}