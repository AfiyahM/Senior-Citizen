{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\React\\\\new\\\\src\\\\components\\\\VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const {\n    videoId\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.heading,\n      children: \"Video Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.videoWrapper,\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"100%\",\n        height: \"400\",\n        src: `https://www.youtube.com/embed/${videoId}`,\n        title: \"YouTube video player\",\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        style: styles.videoPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"FkmO0mWU/4wWDwRH5XyM5T2kQqE=\", false, function () {\n  return [useParams];\n});\n_c = VideoPlayer;\nconst styles = {\n  container: {\n    padding: '20px',\n    maxWidth: '800px',\n    margin: '0 auto',\n    fontFamily: 'Arial, sans-serif'\n  },\n  heading: {\n    fontSize: '24px',\n    fontWeight: 'bold',\n    marginBottom: '20px',\n    textAlign: 'center',\n    color: '#333'\n  },\n  videoWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  videoPlayer: {\n    borderRadius: '8px'\n  }\n};\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","VideoPlayer","_s","videoId","style","styles","container","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","videoWrapper","width","height","src","title","frameBorder","allow","allowFullScreen","videoPlayer","_c","padding","maxWidth","margin","fontFamily","fontSize","fontWeight","marginBottom","textAlign","color","display","justifyContent","alignItems","borderRadius","$RefreshReg$"],"sources":["C:/REACT/React/new/src/components/VideoPlayer.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst VideoPlayer = () => {\r\n  const { videoId } = useParams();\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.heading}>Video Player</h2>\r\n      <div style={styles.videoWrapper}>\r\n        <iframe\r\n          width=\"100%\"\r\n          height=\"400\"\r\n          src={`https://www.youtube.com/embed/${videoId}`}\r\n          title=\"YouTube video player\"\r\n          frameBorder=\"0\"\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen\r\n          style={styles.videoPlayer}\r\n        ></iframe>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    padding: '20px',\r\n    maxWidth: '800px',\r\n    margin: '0 auto',\r\n    fontFamily: 'Arial, sans-serif'\r\n  },\r\n  heading: {\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n    marginBottom: '20px',\r\n    textAlign: 'center',\r\n    color: '#333'\r\n  },\r\n  videoWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  videoPlayer: {\r\n    borderRadius: '8px'\r\n  }\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAQ,CAAC,GAAGL,SAAS,CAAC,CAAC;EAE/B,oBACEE,OAAA;IAAKI,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,gBAC3BP,OAAA;MAAII,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CZ,OAAA;MAAKI,KAAK,EAAEC,MAAM,CAACQ,YAAa;MAAAN,QAAA,eAC9BP,OAAA;QACEc,KAAK,EAAC,MAAM;QACZC,MAAM,EAAC,KAAK;QACZC,GAAG,EAAE,iCAAiCb,OAAO,EAAG;QAChDc,KAAK,EAAC,sBAAsB;QAC5BC,WAAW,EAAC,GAAG;QACfC,KAAK,EAAC,0FAA0F;QAChGC,eAAe;QACfhB,KAAK,EAAEC,MAAM,CAACgB;MAAY;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACV,EAAA,CApBID,WAAW;EAAA,QACKH,SAAS;AAAA;AAAAwB,EAAA,GADzBrB,WAAW;AAsBjB,MAAMI,MAAM,GAAG;EACbC,SAAS,EAAE;IACTiB,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE,OAAO;IACjBC,MAAM,EAAE,QAAQ;IAChBC,UAAU,EAAE;EACd,CAAC;EACDlB,OAAO,EAAE;IACPmB,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE,MAAM;IACpBC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE;EACT,CAAC;EACDlB,YAAY,EAAE;IACZmB,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDb,WAAW,EAAE;IACXc,YAAY,EAAE;EAChB;AACF,CAAC;AAED,eAAelC,WAAW;AAAC,IAAAqB,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}